{"version":3,"sources":["Firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","event","className","placeholder","todo","value","onChange","target","Button","onClick","collection","doc","id","set","merge","List","ListItem","ListItemAvatar","ListItemText","primary","secondary","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","disabled","variant","color","preventDefault","add","timestamp","FieldValue","serverTimestamp","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.838fcfce.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyD6UiyH3vkM98vWusORGfZHVldDDiXcc00\",\r\n    authDomain: \"todo-app-6c104.firebaseapp.com\",\r\n    projectId: \"todo-app-6c104\",\r\n    storageBucket: \"todo-app-6c104.appspot.com\",\r\n    messagingSenderId: \"980190566447\",\r\n    appId: \"1:980190566447:web:601d35db2901dcc7638eda\",\r\n    measurementId: \"G-H9HHS42MTH\"\r\n})\r\n\r\nconst db = firebaseApp.firestore()\r\n\r\nexport default db;","import { Avatar, Button, Input, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Modal } from '@material-ui/core'\r\nimport './Todo.css';\r\nimport React, { useState } from 'react'\r\nimport db from './Firebase';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n    const useStyles = makeStyles((theme)  =>({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing[2,4,3],\r\n        },\r\n    }))\r\n\r\nfunction Todo(props) {\r\n    const classes = useStyles();\r\n    const [open,setOpen] = useState(false);\r\n    const [input, setInput] = useState();\r\n\r\n    const handleOpen =() =>{\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose =() =>{\r\n        setOpen(false);\r\n    };\r\n\r\n    const updateTodo =() =>{\r\n\r\n        db.collection('todos').doc(props.todo.id).set({\r\n           todo: input\r\n        }, {merge:true})\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <>\r\n        <Modal\r\n        open ={open}\r\n        onClose={event =>setOpen(false)}>\r\n        <div className={classes.paper}>\r\n        <h2>EDIT TODO</h2>\r\n        <input placeholder={props.todo.todo} value={input} onChange={(event) => setInput(event.target.value)}></input>  \r\n        <Button onClick = {updateTodo}>Update Todo</Button>\r\n        </div>\r\n        </Modal>\r\n        <List className=\"todo__list\">\r\n            <ListItem>\r\n                <ListItemAvatar>      \r\n                </ListItemAvatar>\r\n                <ListItemText primary={props.todo.todo} secondary=\"DeadLineðŸ™‚\"/>\r\n             </ListItem>\r\n             <button onClick ={event => setOpen(true)}>Edit</button>\r\n             <DeleteForeverIcon onClick={event =>{db.collection('todos').doc(props.todo.id).delete()}}/>\r\n         </List>\r\n         </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport db from './Firebase';\nimport Todo from './Todo';\nimport firebase from 'firebase'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const [input, setInput] = useState([])\n  useEffect(() => {\n    db.collection('todos')\n    .orderBy('timestamp','desc')\n    .onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({ id: doc.id, todo: doc.data().todo })))\n    })\n  }, []);\n  \n\n  const addTodo = (event) => {\n    event.preventDefault();\n\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setInput('')\n  }\n\n\n  return (\n    <div className=\"App\">\n     <h1>Hello Ashu</h1>\n     <form>\n     <FormControl>\n     <InputLabel>âœ… Write your Todo</InputLabel>\n      <Input  value={input} onChange={(event) => setInput(event.target.value)} />    \n     </FormControl>\n     <Button  disabled={!input}  variant='contained' color='primary' onClick={addTodo} type=\"submit\">Add todo</Button>\n     </form>\n     <ul>\n     {      \n       todos.map(todo  => (\n        <Todo todo={todo}/>\n        // <li>{todo}</li>\n        ))\n      }\n     </ul>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}